name: build libraries

on:
  workflow_dispatch

jobs:
  build:
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v2
      
      - name: Install ispc On Ubuntu
        if: matrix.os == 'ubuntu-latest'
        run: |
          mkdir temp && cd temp
          wget https://github.com/ispc/ispc/releases/download/v1.17.0/ispc-v1.17.0-linux.tar.gz 
          tar -xvf ispc-v1.17.0-linux.tar.gz
          echo "$(pwd)/ispc-v1.17.0-linux/bin" >> $GITHUB_PATH
          cd ..
      - name: Install ispc On MacOS
        if: matrix.os == 'macos-latest'
        run: |
          mkdir temp && cd temp
          wget https://github.com/ispc/ispc/releases/download/v1.17.0/ispc-v1.17.0-macOS.tar.gz 
          tar -xvf ispc-v1.17.0-macOS.tar.gz
          echo "$(pwd)/ispc-v1.17.0-macOS/bin" >> $GITHUB_PATH
          cd ..
      - name: Install ispc On Windows
        if: matrix.os == 'windows-latest'
        run: |
          choco install ispc --no-progress
          echo "C:\Program Files\ISPC\ispc-v1.17.0-windows\bin" >> $env:GITHUB_PATH

      - name: Test ispc
        run: ispc --version
      - name: Install rust
        uses: actions-rs/toolchain@v1
        with:
            toolchain: stable
            override: true
            
      - name: install c++ toolchain on linux
        if: matrix.os == 'ubuntu-latest'
        run: sudo apt-get update && sudo apt-get --assume-yes install gcc-multilib
      - name: install c++ toolchain on windows
        if: matrix.os == 'windows-latest'
        uses: ilammy/msvc-dev-cmd@v1
      
      - name: install macos target platforms
        if: matrix.os == 'macos-latest'
        run: rustup target add x86_64-apple-darwin x86_64-unknown-linux-gnu aarch64-apple-darwin aarch64-apple-ios
      - name: install linux target platforms
        if: matrix.os == 'ubuntu-latest'
        run: rustup target add aarch64-unknown-linux-gnu i686-unknown-linux-gnu x86_64-unknown-linux-gnu aarch64-linux-android	armv7-linux-androideabi 
      - name: install windows target platforms
        if: matrix.os == 'windows-latest'
        run: rustup target add i686-pc-windows-gnu i686-pc-windows-msvc x86_64-pc-windows-gnu x86_64-pc-windows-msvc
      
      - name: build macOS targets
        if: matrix.os == 'macos-latest'
        run: |
          cargo build --features=ispc --release --target=x86_64-apple-darwin
          cargo build --features=ispc --release --target=aarch64-apple-darwin 
          cargo build --features=ispc --release --target=aarch64-apple-ios
      - name: build linux targets
        if: matrix.os == 'ubuntu-latest'
        run: |
          cargo build --features=ispc --release --target=aarch64-unknown-linux-gnu
          cargo build --features=ispc --release --target=x86_64-unknown-linux-gnu
          cargo build --features=ispc --release --target=i686-unknown-linux-gnu 
          cargo build --features=ispc --release --target=aarch64-linux-android	
          cargo build --features=ispc --release --target=armv7-linux-androideabi
      - name: build windows targets
        if: matrix.os == 'windows-latest'
        run: |
          cargo build --features=ispc --release --target=i686-pc-windows-gnu
          cargo build --features=ispc --release --target=i686-pc-windows-msvc
          cargo build --features=ispc --release --target=x86_64-pc-windows-gnu
          cargo build --features=ispc --release --target=x86_64-pc-windows-msvc

      - name: Run tests on host
        run: cargo test --release --features=ispc --verbose
      - uses: EndBug/add-and-commit@v9
        with: 
          add: src/ispc/*.a src/ispc/*.lib
          message: "chore: automatically build ispc lib for ${{ matrix.os }}"
          pull: '--rebase --autostash'
